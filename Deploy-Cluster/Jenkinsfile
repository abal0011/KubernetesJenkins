pipeline {
	agent any
	stages {

		stage('Lint HTML') {
			steps {
				sh 'tidy -q -e Deploy-Cluster/index.html'
			}
		}
		
		stage('Build Docker Image') {
			steps {		
                withCredentials([usernamePassword(credentialsId:'dockerhub',passwordVariable:'PASSWORD',usernameVariable:'USERNAME')]) {	
					sh '''
						docker build -t aravindb15/capstone Deploy-Cluster/.
					'''
                }
            }
		}

		stage('Push Image To Dockerhub') {
			steps {		
                withCredentials([usernamePassword(credentialsId:'dockerhub',passwordVariable:'PASSWORD',usernameVariable:'USERNAME')]) {		
					sh '''
						docker login -u $USERNAME -p $PASSWORD
						docker push aravindb15/capstone
					'''				
                }
            }
		}

		stage('Set current kubectl context') {
			steps {
				withAWS(region:'us-west-2', credentials:'Jenkins') {
					sh '''
						kubectl config use-context arn:aws:eks:us-west-2:947522261353:cluster/kubecluster
					'''
				}
			}
		}

		stage('Deploy blue container') {
			steps {
				withAWS(region:'us-west-2', credentials:'Jenkins') {
					sh '''
						kubectl apply -f Deploy-Cluster/blue-controller.json
					'''
				}
			}
		}

		stage('Deploy green container') {
			steps {
				withAWS(region:'us-west-2', credentials:'Jenkins') {
					sh '''
						kubectl apply -f Deploy-Cluster/green-controller.json
					'''
				}
			}
		}

		stage('Create the service in the cluster, redirect to blue') {
			steps {
				withAWS(region:'us-west-2', credentials:'Jenkins') {
					sh '''
						kubectl apply -f Deploy-Cluster/blue-service.json
					'''
				}
			}
		}

		stage('Wait user approve') {
            steps {
                input "Ready to redirect traffic to green?"
            }
        }

		stage('Create the service in the cluster, redirect to green') {
			steps {
				withAWS(region:'us-west-2', credentials:'Jenkins') {
					sh '''
						kubectl apply -f Deploy-Cluster/green-service.json
					'''
				}
			}
		}

	}
}